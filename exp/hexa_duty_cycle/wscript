#! /usr/bin/env python
import sferes

def build(bld):
    osg = not bld.all_envs['default']['NO_OSG']
    libs = 'ODE ROBDYN EIGEN3 BOOST  ROS BOOST_SYSTEM BOOST_THREAD BOOST_SERIALIZATION BOOST_FILESYSTEM DYNAMIXEL IMU_RAZOR '
    cxxflags = bld.get_env()['CXXFLAGS']
#    if osg:
#        libs += ' OSG'

    model = bld.new_task_gen('cxx', 'staticlib')
    model.source = 'hexapod.cc simu.cpp controllerDuty.cpp  '
    model.includes = '. ../../'
    model.target = 'hexapod'
    model.uselib = libs



#    model2g = bld.new_task_gen('cxx', 'staticlib')
#    model2g.source = 'robotHexa.cpp'
#    model2g.includes = '. ../../'
#    model2g.target = 'robot'
#    model2g.uselib = libs
#    model2g.cxxflags = cxxflags 



#    obj3 = bld.new_task_gen('cxx', 'program')
#    obj3.source = 'hexa_turn.cpp '
#    obj3.includes = '. ../../'
#    obj3.target = 'hexa_turn'
#    obj3.uselib_local = 'sferes2 hexapod '
#    obj3.uselib = libs
#    obj3.cxxflags = cxxflags 


    sferes.create_variants(bld,
                           source = 'hexa_duty.cpp',
                           uselib_local = 'sferes2 hexapod',# robot',
                           uselib = libs,
                           target = 'hexa_duty',
                           json = '',
                           variants = ['TEXT'])



